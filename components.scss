@each $palette-color-prefix, $palette-color-variables in get-colors-palette($text-inputs-colors-support-extra-colors-palette, $text-inputs-colors-support-skip-colors-palette) {
    .#{$colors-class-prefix}-#{$palette-color-prefix} {
        @include text-inputs-style() {
            @include include-text-inputs-colors(parse-map($text-inputs-colors-support-parser, $palette-color-variables));
            @include include-placeholder-color(parse-map($text-inputs-placeholder-colors-support-parser, $palette-color-variables));
        }

        @include text-inputs-disabled-style() {
            @include include-text-inputs-colors(parse-map($text-inputs-disabled-colors-support-parser, $palette-color-variables));
        }

        @include datalist-colors(parse-map($text-inputs-datalist-colors-support-parser, $palette-color-variables));
    }

    @include class-text-inputs-style('#{$colors-class-prefix}-#{$palette-color-prefix}') {
        @include include-text-inputs-colors(parse-map($text-inputs-colors-support-parser, $palette-color-variables));
        @include include-placeholder-color(parse-map($text-inputs-placeholder-colors-support-parser, $palette-color-variables));
    }

    @include class-text-inputs-disabled-style('#{$colors-class-prefix}-#{$palette-color-prefix}') {
        @include include-text-inputs-colors(parse-map($text-inputs-disabled-colors-support-parser, $palette-color-variables));
    }

    .#{$colors-class-prefix}-#{$palette-color-prefix} datalist,
    datalist.#{$colors-class-prefix}-#{$palette-color-prefix} {
        @include include-datalist-colors(parse-map($text-inputs-datalist-colors-support-parser, $palette-color-variables));
    }
}
